/*
 * Namf_Communication
 *
 * AMF Communication Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package communication

import (
	"context"
	"encoding/json"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/free5gc/amf/internal/logger"
	"github.com/free5gc/openapi/models"
	"github.com/gin-gonic/gin"
	"go.mongodb.org/mongo-driver/mongo"
	"go.mongodb.org/mongo-driver/mongo/options"
)

// NonUeN2InfoSubscribe - Namf_Communication Non UE N2 Info Subscribe service Operation
func HTTPNonUeN2InfoSubscribe(c *gin.Context) {
	logger.CommLog.Warnf("Handle Non Ue N2 Info Subscribe is not implemented.")
	body, _ := ioutil.ReadAll(c.Request.Body)
	message := models.NonUeN2InfoSubscriptionCreateData{}
	json.Unmarshal(body, &message)
	insertToSubscriptionDatabase(message)
	c.JSON(http.StatusOK, gin.H{})
}

func insertToSubscriptionDatabase(message models.NonUeN2InfoSubscriptionCreateData) {
	clientOptions := options.Client().ApplyURI("mongodb://localhost:27017")
	client, err := mongo.Connect(context.TODO(), clientOptions)
	if err != nil {
		log.Fatal(err)
	}
	err = client.Ping(context.TODO(), nil)
	if err != nil {
		log.Fatal(err)
	}
	collection := client.Database("local").Collection("AMFNonUeN2MessageSubscriptions")
	_, err = collection.InsertOne(context.TODO(), message)
	if err != nil {
		log.Fatal(err)
	}

}
